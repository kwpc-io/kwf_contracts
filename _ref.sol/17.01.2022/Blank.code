.version sol 0.54.0

.macro constructor
DROP
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7_with_init_storage$
}
GETGLOB 6
THROWIF 51
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDU 128
LDU 128
ENDS
.loc Blank.sol, 56
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
THROWIFNOT 100
.loc Blank.sol, 57
GETGLOB 2
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
EQUAL
THROWIFNOT 101
.loc Blank.sol, 58
GETPARAM 7
FIRST
PUSHINT 5000000000
GEQ
THROWIFNOT 102
.loc Blank.sol, 59
NOW
GETGLOB 16
LESS
THROWIFNOT 103
.loc Blank.sol, 60
ACCEPT
.loc Blank.sol, 61
PUSHINT 0
SETGLOB 12
.loc Blank.sol, 62
PUSHINT 0
SETGLOB 13
.loc Blank.sol, 63
SWAP
SETGLOB 14
.loc Blank.sol, 64
SETGLOB 15
.loc Blank.sol, 69
PUSHINT 0
SETGLOB 18
.loc Blank.sol, 70
PUSHINT 0
SETGLOB 19
.loc Blank.sol, 72
TRUE
SETGLOB 20
.loc Blank.sol, 73
TRUE
SETGLOB 21
.loc Blank.sol, 0
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro setFromGiverCode
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Blank.sol, 76
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDU 256
ENDS
.loc Blank.sol, 0
CALLREF {
	CALL $setFromGiverCode_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro setFromGiverCode_internal_macro
.loc Blank.sol, 78
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
GETGLOB 2
EQUAL
THROWIFNOT 101
.loc Blank.sol, 79
GETGLOB 21
THROWIFNOT 111
.loc Blank.sol, 80
GETPARAM 7
FIRST
PUSHINT 500000000
GEQ
THROWIFNOT 102
.loc Blank.sol, 81
NOW
GETGLOB 16
LESS
THROWIFNOT 103
.loc Blank.sol, 82
ACCEPT
.loc Blank.sol, 83
SETGLOB 11
.loc Blank.sol, 0

.macro setKWDPoolCodeHash
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Blank.sol, 86
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDU 256
ENDS
.loc Blank.sol, 0
CALLREF {
	CALL $setKWDPoolCodeHash_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.globl	setKWDPoolCodeHash_internal
.type	setKWDPoolCodeHash_internal, @function
CALL $setKWDPoolCodeHash_internal_macro$

.macro setKWDPoolCodeHash_internal_macro
.loc Blank.sol, 88
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
GETGLOB 2
EQUAL
THROWIFNOT 101
.loc Blank.sol, 89
GETGLOB 20
THROWIFNOT 111
.loc Blank.sol, 90
GETPARAM 7
FIRST
PUSHINT 500000000
GEQ
THROWIFNOT 102
.loc Blank.sol, 91
NOW
GETGLOB 16
LESS
THROWIFNOT 103
.loc Blank.sol, 92
ACCEPT
.loc Blank.sol, 94
SETGLOB 10
.loc Blank.sol, 0

.globl	getKWDPoolAddress_internal
.type	getKWDPoolAddress_internal, @function
CALL $getKWDPoolAddress_internal_macro$

.macro getKWDPoolAddress_internal_macro
.loc Blank.sol, 99
ROT
NEWC
STU 256
PUSHINT 0
NEWDICT
PUSHINT 64
DICTUSETB
MYADDR
PUSHINT 1
ROT
PUSHINT 64
DICTUSET
ROT
NEWC
STU 128
PUSHINT 5
ROT
PUSHINT 64
DICTUSETB
GETGLOB 16
NEWC
STU 256
PUSHINT 2
ROT
PUSHINT 64
DICTUSETB
GETGLOB 17
NEWC
STU 256
PUSHINT 3
ROT
PUSHINT 64
DICTUSETB
SWAP
NEWC
STU 128
PUSHINT 4
ROT
PUSHINT 64
DICTUSETB
NEWC
STDICT
ENDC
HASHCU
.loc Blank.sol, 108
GETGLOB 10
SWAP
PUSHINT 0
DUP
CALLREF {
	CALL $stateInitHash_macro$
}
.loc Blank.sol, 0

.macro isFundReady
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Blank.sol, 113
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDU 128
LDU 256
LDU 128
ENDS
.loc Blank.sol, 0
CALLREF {
	CALL $isFundReady_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro isFundReady_internal_macro
.loc Blank.sol, 115
GETGLOB 9
PARSEMSGADDR
INDEX 3
PLDU 256
.loc Blank.sol, 116
SWAP
XCHG S1, S3
CALLREF {
	CALL $getKWDPoolAddress_internal_macro$
}
EQUAL
THROWIFNOT 107
.loc Blank.sol, 117
FALSE
SETGLOB 20
.loc Blank.sol, 118
GETGLOB 9
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x0000000000000000000000000000c9710baf_
STSLICER
ENDC
PUSHINT 64
SENDRAWMSG
.loc Blank.sol, 0

.macro notifyLeft
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Blank.sol, 122
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDU 128
LDU 128
LDU 256
LDU 128
ENDS
.loc Blank.sol, 0
CALLREF {
	CALL $notifyLeft_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro notifyLeft_internal_macro
.loc Blank.sol, 124
GETGLOB 9
PARSEMSGADDR
INDEX 3
PLDU 256
.loc Blank.sol, 126
SWAP
XCHG S1, S3
CALLREF {
	CALL $getKWDPoolAddress_internal_macro$
}
EQUAL
THROWIFNOT 107
.loc Blank.sol, 127
GETPARAM 7
FIRST
PUSHINT 500000000
GEQ
THROWIFNOT 102
.loc Blank.sol, 128
NOW
GETGLOB 16
LESS
THROWIFNOT 103
.loc Blank.sol, 129
ACCEPT
.loc Blank.sol, 130
GETGLOB 13
ADD
UFITS 128
SETGLOB 13
.loc Blank.sol, 131
GETGLOB 18
INC
SETGLOB 18
.loc Blank.sol, 0

.globl	getFromGiverAddress_internal
.type	getFromGiverAddress_internal, @function
CALL $getFromGiverAddress_internal_macro$

.macro getFromGiverAddress_internal_macro
.loc Blank.sol, 136
PUSHINT 0
NEWC
STU 256
PUSHINT 0
NEWDICT
PUSHINT 64
DICTUSETB
MYADDR
PUSHINT 1
ROT
PUSHINT 64
DICTUSET
SWAP
PUSHINT 4
ROT
PUSHINT 64
DICTUSET
GETGLOB 16
NEWC
STU 256
PUSHINT 2
ROT
PUSHINT 64
DICTUSETB
GETGLOB 17
NEWC
STU 256
PUSHINT 3
ROT
PUSHINT 64
DICTUSETB
NEWC
STDICT
ENDC
HASHCU
.loc Blank.sol, 143
GETGLOB 11
SWAP
PUSHINT 0
DUP
CALLREF {
	CALL $stateInitHash_macro$
}
.loc Blank.sol, 0

.macro deployFromGiver
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Blank.sol, 149
OVER
PUSHCONT {
	LDREF
	LDREF
	ENDS
	CTOS
}
PUSHCONT {
	LDREF
}
IFELSE
LDMSGADDR
ENDS
.loc Blank.sol, 0
CALLREF {
	CALL $deployFromGiver_internal_macro$
}
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 1
	STUR 98
	SWAP
	NEWC
	STSLICECONST xd937ac22
	STSLICE
	STBREFR
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	DROP
}
IFELSE
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro deployFromGiver_internal_macro
.loc Blank.sol, 151
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
GETGLOB 2
EQUAL
THROWIFNOT 101
.loc Blank.sol, 152
NOW
GETGLOB 16
LESS
THROWIFNOT 103
.loc Blank.sol, 153
DUP
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
SDEQ
THROWIF 110
.loc Blank.sol, 154
OVER
HASHCU
GETGLOB 11
EQUAL
THROWIFNOT 105
.loc Blank.sol, 155
GETPARAM 7
FIRST
PUSHINT 500000000
PUSHINT 1000000000
UFITS 128
ADD
UFITS 128
GEQ
THROWIFNOT 102
.loc Blank.sol, 156
ACCEPT
.loc Blank.sol, 158
PUSHINT 0
NEWC
STU 256
PUSHINT 0
NEWDICT
PUSHINT 64
DICTUSETB
MYADDR
PUSHINT 1
ROT
PUSHINT 64
DICTUSET
SWAP
PUSHINT 4
ROT
PUSHINT 64
DICTUSET
GETGLOB 16
NEWC
STU 256
PUSHINT 2
ROT
PUSHINT 64
DICTUSETB
GETGLOB 17
NEWC
STU 256
PUSHINT 3
ROT
PUSHINT 64
DICTUSETB
NEWC
STDICT
ENDC
.loc Blank.sol, 166
SWAP
PUSHSLICE x81_
NEWC
STSLICE
STOPTREF
STOPTREF
STZERO
ENDC
.loc Blank.sol, 167
FALSE
SETGLOB 21
.loc Blank.sol, 168
GETGLOB 18
INC
SETGLOB 18
.loc Blank.sol, 169
DUP
HASHCU
NEWC
STSLICECONST x801_
STU 256
ENDC
CTOS
SWAP
PUSHINT 500000000
DUP
ADD
UFITS 128
PUSH S2
NEWC
STSLICECONST x62_
STSLICE
SWAP
STGRAMS
PUSHSLICE x000000000000000000000000007_
STSLICER
OVER
CALLREF {
	CTOS
	LDI 1
	SWAP
	PUSHCONT {
		LDI 5
		NIP
	}
	IF
	LDI 1
	SWAP
	PUSHCONT {
		LDI 2
		NIP
	}
	IF
	LDOPTREF
	LDOPTREF
	LDDICT
	ENDS
	BLKDROP 3
}
STREF
STSLICECONST x345aaf9fc_
ENDC
PUSHINT 0
SENDRAWMSG
.loc Blank.sol, 0

.macro notifyRight
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Blank.sol, 176
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDU 128
LDMSGADDR
ENDS
.loc Blank.sol, 0
CALLREF {
	CALL $notifyRight_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro notifyRight_internal_macro
.loc Blank.sol, 178
GETGLOB 9
PARSEMSGADDR
INDEX 3
PLDU 256
.loc Blank.sol, 179
SWAP
CALLREF {
	CALL $getFromGiverAddress_internal_macro$
}
EQUAL
THROWIFNOT 104
.loc Blank.sol, 180
GETPARAM 7
FIRST
PUSHINT 500000000
GEQ
THROWIFNOT 102
.loc Blank.sol, 181
NOW
GETGLOB 16
LESS
THROWIFNOT 103
.loc Blank.sol, 182
ACCEPT
.loc Blank.sol, 183
GETGLOB 12
ADD
UFITS 128
SETGLOB 12
.loc Blank.sol, 0

.macro acknowledgeFinalizeLeft
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Blank.sol, 186
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDU 128
LDU 256
LDU 128
ENDS
.loc Blank.sol, 0
CALLREF {
	CALL $acknowledgeFinalizeLeft_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro acknowledgeFinalizeLeft_internal_macro
.loc Blank.sol, 188
GETGLOB 9
PARSEMSGADDR
INDEX 3
PLDU 256
.loc Blank.sol, 189
SWAP
XCHG S1, S3
CALLREF {
	CALL $getKWDPoolAddress_internal_macro$
}
EQUAL
THROWIFNOT 107
.loc Blank.sol, 191
ACCEPT
.loc Blank.sol, 193
GETGLOB 19
INC
SETGLOB 19
.loc Blank.sol, 0

.macro acknowledgeFinalizeRight
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Blank.sol, 196
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDMSGADDR
ENDS
.loc Blank.sol, 0
CALLREF {
	CALL $acknowledgeFinalizeRight_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro acknowledgeFinalizeRight_internal_macro
.loc Blank.sol, 198
GETGLOB 9
PARSEMSGADDR
INDEX 3
PLDU 256
.loc Blank.sol, 199
SWAP
CALLREF {
	CALL $getFromGiverAddress_internal_macro$
}
EQUAL
THROWIFNOT 104
.loc Blank.sol, 201
ACCEPT
.loc Blank.sol, 203
GETGLOB 19
INC
SETGLOB 19
.loc Blank.sol, 0

.macro finalize
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Blank.sol, 208
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDMSGADDR
ENDS
.loc Blank.sol, 0
CALLREF {
	CALL $finalize_internal_macro$
}
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.macro finalize_internal_macro
.loc Blank.sol, 210
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
GETGLOB 2
EQUAL
THROWIFNOT 101
.loc Blank.sol, 211
NOW
GETGLOB 16
GEQ
NOW
GETGLOB 17
LEQ
AND
THROWIFNOT 108
.loc Blank.sol, 212
GETPARAM 7
FIRST
PUSHINT 1000000000
PUSHINT 500000000
ADD
UFITS 128
GEQ
THROWIFNOT 102
.loc Blank.sol, 213
GETGLOB 13
GETGLOB 12
MIN
GETGLOB 14
GEQ
THROWIFNOT 112
.loc Blank.sol, 214
GETGLOB 19
GETGLOB 18
NEQ
THROWIFNOT 109
.loc Blank.sol, 215
ACCEPT
.loc Blank.sol, 216
GETGLOB 12
GETGLOB 13
ROT
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x43b9aca00000000000000000000000000003_
STSLICER
ROTREV
NEWC
STSLICECONST x719b6236
STU 128
STU 128
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
.loc Blank.sol, 0

.macro setFundCode
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Blank.sol, 219
LDREF
ENDS
.loc Blank.sol, 0
CALLREF {
	CALL $setFundCode_internal_macro$
}
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.globl	setFundCode_internal
.type	setFundCode_internal, @function
CALL $setFundCode_internal_macro$

.macro setFundCode_internal_macro
.loc Blank.sol, 221
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
GETGLOB 2
EQUAL
THROWIFNOT 101
.loc Blank.sol, 222
GETGLOB 19
GETGLOB 18
EQUAL
THROWIFNOT 109
.loc Blank.sol, 223
NOW
GETGLOB 16
GEQ
NOW
GETGLOB 17
LEQ
AND
THROWIFNOT 108
.loc Blank.sol, 224
GETPARAM 7
FIRST
GTINT 4
THROWIFNOT 102
.loc Blank.sol, 225
DUP
SETCODE
.loc Blank.sol, 226
CTOS
DUP
PUSHSLICE x8adb35
SDEQ
PUSHCONT {
	PLDREFIDX 1
	CTOS
}
IF
PLDREF
CTOS
BLESS
POP C3
.loc Blank.sol, 0

.macro c4_to_c7
PUSHROOT
CTOS
LDU 256 ; pubkey c4
LDU 64 ; pubkey timestamp c4
LDU 1 ; ctor flag
NIP
LDU 256
LDU 256
LDU 128
LDREF
ENDS
CTOS
LDU 128
LDU 128
LDU 128
LDU 256
LDU 256
LDREF
ENDS
CTOS
LDU 256
LDU 256
LDI 1
LDI 1
ENDS
SETGLOB 21
SETGLOB 20
SETGLOB 19
SETGLOB 18
SETGLOB 17
SETGLOB 16
SETGLOB 15
SETGLOB 14
SETGLOB 13
SETGLOB 12
SETGLOB 11
SETGLOB 10
SETGLOB 3
SETGLOB 2

.macro c4_to_c7_with_init_storage
PUSHROOT
CTOS
SBITS
GTINT 1
PUSHCONT {
	PUSHINT 0
	PUSHROOT
	CTOS
	PLDDICT ; D
	PUSHINT 0
	SETGLOB 10
	PUSHINT 0
	SETGLOB 11
	PUSHINT 0
	SETGLOB 12
	PUSHINT 0
	SETGLOB 13
	PUSHINT 0
	SETGLOB 14
	PUSHINT 0
	SETGLOB 15
	PUSHINT 1
	OVER
	PUSHINT 64
	DICTUGET
	PUSHCONT {
		PLDU 256
	}
	PUSHCONT {
		PUSHINT 0
	}
	IFELSE
	SETGLOB 16
	PUSHINT 2
	OVER
	PUSHINT 64
	DICTUGET
	PUSHCONT {
		PLDU 256
	}
	PUSHCONT {
		PUSHINT 0
	}
	IFELSE
	SETGLOB 17
	PUSHINT 0
	SETGLOB 18
	PUSHINT 0
	SETGLOB 19
	PUSHINT 0
	SETGLOB 20
	PUSHINT 0
	SETGLOB 21
	PUSHINT 64
	DICTUGET
	THROWIFNOT 61
	PLDU 256
	SETGLOB 2
	PUSHINT 0 ; timestamp
	SETGLOB 3
}
IFREFELSE {
	CALL $c4_to_c7$
}

.macro c7_to_c4
GETGLOB 21
GETGLOB 20
GETGLOB 19
GETGLOB 18
GETGLOB 17
GETGLOB 16
GETGLOB 15
GETGLOB 14
GETGLOB 13
GETGLOB 12
GETGLOB 11
GETGLOB 10
GETGLOB 3
GETGLOB 2
NEWC
STU 256
STU 64
STONE
STU 256
STU 256
STU 128
ROLLREV 9
NEWC
STU 128
STU 128
STU 128
STU 256
STU 256
ROLLREV 4
NEWC
STU 256
STU 256
STI 1
STI 1
STBREFR
STBREFR
ENDC
POPROOT

.macro upd_only_time_in_c4
PUSHROOT
CTOS
LDU 256
LDU 64
NIP
GETGLOB 3
ROT
NEWC
STU 256
STU 64
STSLICE
ENDC
POPROOT

.internal-alias :main_internal, 0
.internal :main_internal
PUSHROOT
CTOS
SBITS
NEQINT 1
SETGLOB 6
PUSH S2
CTOS
LDU 4 ; bounced tail
LDMSGADDR ; bounced src tail
DROP
SETGLOB 9
MODPOW2 1
IFRET
OVER
SEMPTY ; isEmpty
IFJMPREF {
	GETGLOB 6
	THROWIFNOT 76
}
OVER
LDUQ 32  ; [funcId] body' ok
THROWIFNOT 60
OVER
IFNOTJMPREF {
	GETGLOB 6
	THROWIFNOT 76
}
SWAP
CALLREF {
	CALL $public_function_selector$
}
THROW 60

.internal-alias :main_external, -1
.internal :main_external
PUSHROOT
CTOS
SBITS
NEQINT 1
SETGLOB 6
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
SETGLOB 9
OVER
CALLREF {
	CALL $c4_to_c7_with_init_storage$
}
LDU 1 ; haveSign msgSlice
SWAP
PUSHCONT {
	PUSHINT 512
	LDSLICEX ; signatureSlice msgSlice
	DUP
	HASHSU ; signatureSlice msgSlice hashMsgSlice
	SWAP
	LDU 1 ; signatureSlice hashMsgSlice havePubkey msgSlice
	SWAP
	PUSHCONT {
		LDU 256 ; signatureSlice hashMsgSlice pubkey msgSlice
		XCHG S3
		SWAP
	}
	PUSHCONT {
		XCHG S2
		GETGLOB 2
	}
	IFELSE
	DUP
	SETGLOB 5
	CHKSIGNU ; msgSlice isSigned
	THROWIFNOT 40
}
PUSHCONT {
	LDU 1 ; havePubkey msgSlice
	SWAP
	THROWIF 58
}
IFELSE
LDU 64 ; timestamp msgSlice
SWAP
CALL $replay_protection_macro$
LDU 32 ; expireAt msgSlice
SWAP
NOW ; msgSlice expireAt now
GREATER ; msgSlice expireAt>now
THROWIFNOT 57
LDU 32 ; funcId body
SWAP
CALLREF {
	CALL $public_function_selector$
}
THROW 60

.macro public_function_selector
DUP
PUSHINT 581309056
LEQ
IFJMPREF {
	DUP
	PUSHINT 341365138
	EQUAL
	IFJMPREF {
		CALL $isFundReady$
	}
	DUP
	PUSHINT 541945395
	EQUAL
	IFJMPREF {
		CALL $acknowledgeFinalizeLeft$
	}
	DUP
	PUSHINT 559983306
	EQUAL
	IFJMPREF {
		CALL $constructor$
	}
	DUP
	PUSHINT 581309056
	EQUAL
	IFJMPREF {
		CALL $finalize$
	}
}
DUP
PUSHINT 1343095276
LEQ
IFJMPREF {
	DUP
	PUSHINT 973813956
	EQUAL
	IFJMPREF {
		CALL $setKWDPoolCodeHash$
	}
	DUP
	PUSHINT 1149759527
	EQUAL
	IFJMPREF {
		CALL $notifyLeft$
	}
	DUP
	PUSHINT 1173001449
	EQUAL
	IFJMPREF {
		CALL $notifyRight$
	}
	DUP
	PUSHINT 1343095276
	EQUAL
	IFJMPREF {
		CALL $setFromGiverCode$
	}
}
DUP
PUSHINT 2129239083
LEQ
IFJMPREF {
	DUP
	PUSHINT 1496820770
	EQUAL
	IFJMPREF {
		CALL $deployFromGiver$
	}
	DUP
	PUSHINT 2053371246
	EQUAL
	IFJMPREF {
		CALL $acknowledgeFinalizeRight$
	}
	DUP
	PUSHINT 2129239083
	EQUAL
	IFJMPREF {
		CALL $setFundCode$
	}
}

